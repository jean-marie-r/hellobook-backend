services:
    backend:
        container_name: backend
        image: hellobook-backend
        build:
            context: .
            target: ${NODE_ENV:-development}
        tags:
            - latest
        ports:
            - '${PORT}:${PORT}'
        environment:
            - NODE_ENV=${NODE_ENV:-development}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - DATABASE_URL=${DATABASE_URL}
            - HEALTHCHECK_URL=${HEALTHCHECK_URL}
            - PORT=${PORT}
        command: [ './scripts/start.sh' ]
        volumes:
            - ./:/app
        healthcheck:
            test: [ 'CMD', 'wget', '--spider', '-q', '${HEALTHCHECK_URL}' ]
            interval: 30s
            timeout: 10s
            retries: 3
        depends_on:
            postgres:
                condition: service_healthy

    postgres:
        container_name: postgres_db
        image: postgres:16-alpine
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - hellobook_data:/var/lib/postgresql/data
        healthcheck:
            test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}' ]
            interval: 5s
            timeout: 5s
            retries: 5

volumes:
    hellobook_data: {}
